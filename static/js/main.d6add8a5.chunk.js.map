{"version":3,"sources":["styledComponents/LandingPage/LandingPageContainer.js","styledComponents/LandingPage/WelcomeTitle.js","styledComponents/LandingPage/StartButton.js","styledComponents/LandingPage/VertinalSpacer.js","views/LandingPage.js","styledComponents/GamePage/GamePageContainer.js","styledComponents/GamePage/Question.js","styledComponents/GamePage/ButtonContainer.js","styledComponents/GamePage/YesButton.js","styledComponents/GamePage/NoButton.js","styledComponents/GamePage/Score.js","components/Score.js","styledComponents/GamePage/TimerStyle.js","components/TimeCounter.js","utils/primeGenerator.js","utils/randomPrime.js","views/GamePage.js","styledComponents/GameOver/GameOverPageContainer.js","styledComponents/GameOver/RestartButton.js","views/Page404.js","config/routes.js","views/GameOverPage.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","h1","LandingPage","LandingPageContainer","WelcomeTitle","className","data-text","StartButton","to","Score","props","useEffect","score","TimerCounter","interval","useState","seconds","setSeconds","timeLimit","countDownMilliSeconds","Date","getTime","setInterval","now","distance","Math","floor","timeIsUp","clearInterval","startTimer","TimerStyle","primeArray","aLimit","primeList","limit","i","c","j","push","primeGenerator","random","length","GamePage","isTimeUp","setIsTimeUp","randomPrimeGenerator","randomPrime","setRandomPrime","displayNumber","setDisplayNumber","isPrime","setIsPrime","setScore","gameOver","aReason","localStorage","setItem","history","GamePageContainer","Question","ButtonContainer","YesButton","onClick","NoButton","Page404","path","name","component","exact","reason","setReason","aScore","getItem","getScore","getGameOverReason","clear","GameOverPageContainer","RestartButton","style","width","height","display","flexDirection","alignItems","justifyContent","fontSize","fontWeight","color","textDecoration","href","RouteWithSubRoutes","route","render","routes","App","map","key","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6add8a5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  height: 100vh;\r\n  background-color: #000;\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.h1`\r\n  font-size: 5rem;\r\n  font-weight: 300;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  & a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n    background-color: rgba(0, 129, 255, 0.6);\r\n    font-size: 4rem;\r\n    padding: 10px 30px 20px 30px;\r\n    transition: box-shadow 0.3s ease-in-out;\r\n\r\n    :hover {\r\n      box-shadow: 0px 0px 15px rgb(0, 1, 0.5);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 7% 0;\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// styled componenets\r\nimport LandingPageContainer from \"../styledComponents/LandingPage/LandingPageContainer\";\r\nimport WelcomeTitle from \"../styledComponents/LandingPage/WelcomeTitle\";\r\nimport StartButton from \"../styledComponents/LandingPage/StartButton\";\r\nimport VerticalSpacer from \"../styledComponents/LandingPage/VertinalSpacer\";\r\n\r\n// mykee style\r\nimport \"../mykeeText.css\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <LandingPageContainer>\r\n      <WelcomeTitle>\r\n        Welcome to\r\n        <div className=\"neon\">\r\n          <span className=\"text\" data-text=\"Mykee's\">\r\n            Mykee's\r\n          </span>\r\n          <span className=\"gradient\"></span>\r\n          <span className=\"spotlight\"></span>\r\n        </div>\r\n        Prime Game\r\n      </WelcomeTitle>\r\n      <VerticalSpacer />\r\n      <StartButton>\r\n        <NavLink to=\"/game\">Start Game</NavLink>\r\n      </StartButton>\r\n    </LandingPageContainer>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background-color: #000;\r\n  color: #fff;\r\n  height: 100vh;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  font-size: 6rem;\r\n  margin: 5% 0;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  background-color: green;\r\n  border: 3px solid green;\r\n  cursor: pointer;\r\n  margin: 0 30px;\r\n  padding: 0 0 10px 0;\r\n  text-align: center;\r\n  font-size: 4rem;\r\n  color: white;\r\n  flex: 1;\r\n  max-width: 500px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0 30px;\r\n  background-color: red;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  padding: 0 0 10px 0;\r\n  border: 3px solid red;\r\n  font-size: 4rem;\r\n  color: white;\r\n  flex: 1;\r\n  max-width: 500px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  font-size: 4rem;\r\n  padding: 5% 0 5% 0;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\n\r\n// styled component\r\nimport ScoreStyle from \"../styledComponents/GamePage/Score\";\r\n\r\nexport default function Score(props) {\r\n  useEffect(() => {}, [props.score]);\r\n  return <ScoreStyle>Score: {props.score}</ScoreStyle>;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  font-size: 5rem;\r\n  font-weight: 300;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styled comp\r\nimport TimerStyle from \"../styledComponents/GamePage/TimerStyle\";\r\n\r\nexport default function TimerCounter(props) {\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  let interval;\r\n  const timeLimit = props.timeLimit;\r\n  const startTimer = () => {\r\n    // had to add an extra milli-s at the end of countDownMilliSeconds to\r\n    // make sure the flooring worked properly. It works but I know its\r\n    // not elegant.\r\n    const countDownMilliSeconds =\r\n      new Date().getTime() + timeLimit * 1000 + 1010;\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = countDownMilliSeconds - now;\r\n      const seconds = Math.floor(distance / 1000);\r\n\r\n      if (distance < 0) {\r\n        props.timeIsUp();\r\n        clearInterval(interval);\r\n      } else {\r\n        setSeconds(seconds);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <TimerStyle>\r\n      <b>{seconds}</b>s remaining\r\n    </TimerStyle>\r\n  );\r\n}\r\n","export default (aLimit) => {\r\n  let primeList = [];\r\n  const limit = aLimit;\r\n\r\n  //loop till i equals to $limit\r\n  for (let i = 3; i <= limit; i++) {\r\n    let c = 0;\r\n\r\n    for (let j = 1; j <= i; j++) {\r\n      // % modules will give the reminder value, so if the reminder is 0 then it is divisible\r\n      if (i % j === 0) {\r\n        //increment the value of c\r\n        c++;\r\n      }\r\n    }\r\n\r\n    //if the value of c is 2 then it is a prime number\r\n    //because a prime number should be exactly divisible by 2 times only (itself and 1)\r\n    if (c === 2) {\r\n      primeList.push(i);\r\n    }\r\n  }\r\n  return primeList;\r\n};\r\n","import primeGenerator from \"./primeGenerator\";\r\nconst primeArray = primeGenerator(1000);\r\n\r\nexport default () => {\r\n  const randomPrime = primeArray[Math.floor(Math.random() * primeArray.length)];\r\n  return randomPrime;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// styled components\r\nimport GamePageContainer from \"../styledComponents/GamePage/GamePageContainer\";\r\nimport Question from \"../styledComponents/GamePage/Question\";\r\nimport ButtonContainer from \"../styledComponents/GamePage/ButtonContainer\";\r\nimport YesButton from \"../styledComponents/GamePage/YesButton\";\r\nimport NoButton from \"../styledComponents/GamePage/NoButton\";\r\n\r\n// componenets\r\nimport Score from \"../components/Score\";\r\nimport TimerCounter from \"../components/TimeCounter\";\r\n\r\n// utils\r\nimport randomPrimeGenerator from \"../utils/randomPrime\";\r\n\r\nfunction GamePage(props) {\r\n  const [timeLimit] = useState(30);\r\n  const [isTimeUp, setIsTimeUp] = useState(false);\r\n  const [randomPrime, setRandomPrime] = useState(randomPrimeGenerator());\r\n  const [displayNumber, setDisplayNumber] = useState(0);\r\n  const [isPrime, setIsPrime] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n\r\n  function timeIsUp() {\r\n    setIsTimeUp(true);\r\n  }\r\n\r\n  function checkYesClick() {\r\n    if (!isPrime) {\r\n      // GameOver\r\n      gameOver(`${randomPrime + 1} is Not prime!`);\r\n    }\r\n    setScore(score + 1);\r\n    localStorage.setItem(\"score\", score);\r\n    setRandomPrime(randomPrimeGenerator());\r\n  }\r\n\r\n  function checkNoClick() {\r\n    if (isPrime) {\r\n      // GAME OVER!\r\n      gameOver(`${randomPrime} Is prime!`);\r\n    }\r\n    setScore(score + 1);\r\n    localStorage.setItem(\"score\", score);\r\n    setRandomPrime(randomPrimeGenerator());\r\n  }\r\n  function questionNumberGenerator() {\r\n    let trick = Math.floor(Math.random() * 2);\r\n    if (trick) {\r\n      setDisplayNumber(randomPrime + 1);\r\n      setIsPrime(false);\r\n    } else {\r\n      setDisplayNumber(randomPrime);\r\n      setIsPrime(true);\r\n    }\r\n  }\r\n\r\n  function gameOver(aReason) {\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"gameOverReason\", aReason);\r\n    props.history.push(\"/game-over\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    // update display number\r\n    setDisplayNumber(randomPrime);\r\n    if (isTimeUp) {\r\n      gameOver(\"Time ran out!\");\r\n    }\r\n    questionNumberGenerator();\r\n  });\r\n\r\n  return (\r\n    <GamePageContainer>\r\n      <Score score={score} />\r\n      <TimerCounter timeIsUp={timeIsUp} timeLimit={timeLimit} />\r\n      <Question>\r\n        is <b>{displayNumber}</b> prime?\r\n      </Question>\r\n      <ButtonContainer>\r\n        <YesButton onClick={checkYesClick}>Yes</YesButton>\r\n        <NoButton onClick={checkNoClick}>No</NoButton>\r\n      </ButtonContainer>\r\n    </GamePageContainer>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  height: 100vh;\r\n  background-color: #000;\r\n  color: rgb(255, 102, 102);\r\n  text-align: center;\r\n\r\n  h1 {\r\n    font-size: 8rem;\r\n    font-weight: 400;\r\n    padding: 50px 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 4rem;\r\n    padding: 30px 0;\r\n    font-weight: 300;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport StartButton from \"../LandingPage/StartButton\";\r\n\r\nexport default styled(StartButton)`\r\n  margin-top: 60px;\r\n`;\r\n","import React from \"react\";\r\n\r\nfunction Page404() {\r\n  const container404 = {\r\n    width: \"100%\",\r\n    height: \"70vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontSize: \"3rem\",\r\n    fontWeight: \"300\",\r\n  };\r\n\r\n  const linkStyle = {\r\n    fontSize: \"1.6rem\",\r\n    color: \"lightblue\",\r\n    textDecoration: \"none\",\r\n  };\r\n\r\n  return (\r\n    <div style={container404}>\r\n      <div>\r\n        <h2 style={titleStyle}>I think you've taken a wrong turn somewhere!</h2>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <a style={linkStyle} href=\"/\">\r\n          Click here to get to safety\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","// views\r\nimport LandingPage from \"../views/LandingPage\";\r\nimport GamePage from \"../views/GamePage\";\r\nimport GameOverPage from \"../views/GameOverPage\";\r\nimport Page404 from \"../views/Page404\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    name: \"LandingPage\",\r\n    component: LandingPage,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/game\",\r\n    name: \"GamePage\",\r\n    component: GamePage,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/game-over\",\r\n    name: \"GameOverPage\",\r\n    component: GameOverPage,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: Page404,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n// styled components\r\nimport GameOverPageContainer from \"../styledComponents/GameOver/GameOverPageContainer\";\r\nimport RestartButton from \"../styledComponents/GameOver/RestartButton\";\r\n\r\nfunction GaveOverPage() {\r\n  const [reason, setReason] = useState(\"Gods of Math said no!\");\r\n  const [score, setScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getScore();\r\n    getGameOverReason();\r\n    return () => {\r\n      localStorage.clear();\r\n    };\r\n  }, []);\r\n\r\n  function getGameOverReason() {\r\n    const aReason = localStorage.getItem(\"gameOverReason\");\r\n    setReason(aReason);\r\n  }\r\n\r\n  function getScore() {\r\n    const aScore = localStorage.getItem(\"score\");\r\n    setScore(aScore);\r\n  }\r\n\r\n  return (\r\n    <GameOverPageContainer>\r\n      <h1>Game Over</h1>\r\n      <p>{reason}</p>\r\n      <p>You got {score} right!</p>\r\n      <RestartButton>\r\n        <NavLink to=\"/game\">Start Again</NavLink>\r\n      </RestartButton>\r\n    </GameOverPageContainer>\r\n  );\r\n}\r\n\r\nexport default GaveOverPage;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// config\nimport routes from \"./config/routes\";\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={(props) => <route.component {...props} routes={route.routes} />}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}